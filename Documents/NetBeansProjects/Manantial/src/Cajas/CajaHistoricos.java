/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Cajas;


import Conversores.Numeros;
import Proveedores.Proveedores;
import facturacion.clientes.Clientes;
import interfaces.Personalizable;
import interfacesPrograma.Cajeables;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Iterator;
import javax.swing.DefaultListModel;
import tablas.MiModeloTablaArticulos;

/**
 *
 * @author mauro
 */
public class CajaHistoricos extends javax.swing.JInternalFrame {
    private static Double totalVentas;
    private static Double totalGastos;
    private static Double totalEfect;
    private ArrayList listadoC;
    private Integer operacionSelect=0;
    private Cajas cajjas;
    /**
     * Creates new form CajaAbm
     */
    public CajaHistoricos() {
        //Cajeables caj=new Cajas();
        //Inicio.caja=(Cajas) caj.ArquearCaja(Inicio.caja);
        cajjas=new Cajas();
        listadoC=new ArrayList();
        initComponents();
       
        
    }
    private void AgregarRenglonTabla(){
        this.jTable1.removeAll();
        MiModeloTablaArticulos tablaCaja=new MiModeloTablaArticulos();
        
        Iterator itC=listadoC.listIterator();
        totalVentas=0.00;
        totalGastos=0.00;
        totalEfect=0.00;
        Cajas cajj=new Cajas();
        jTable1.setModel(tablaCaja);
        tablaCaja.addColumn("COMPROBANTE");
        tablaCaja.addColumn("MOVIMIENTO");
        tablaCaja.addColumn("MONTO");
        Object[] fila=new Object[3];
        while(itC.hasNext()){
            cajj=(Cajas)itC.next();
            fila[0]=cajj.getNumeroDeComprobante();
            fila[1]=cajj.getDescripcionMovimiento();
            if(cajj.getTipoMovimiento()==1 || cajj.getTipoMovimiento()==7 || cajj.getTipoMovimiento()==13){
            totalVentas=totalVentas + cajj.getMontoMovimiento();
            }else{
            if(cajj.getTipoMovimiento()==9){
                //totalVentas=totalVentas + cajj.getMontoMovimiento();
            }else{

                totalGastos=totalGastos + cajj.getMontoMovimiento();
            }
        }

            fila[2]=cajj.getMontoMovimiento();
            tablaCaja.addRow(fila);
        }
        ModificarLabels();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        dateChooserCombo1 = new datechooser.beans.DateChooserCombo();
        jButton1 = new javax.swing.JButton();

        setClosable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("CAJA");

        MiModeloTablaArticulos tablaCaja=new MiModeloTablaArticulos();
        Iterator itC=Cajas.getListadoCajas().listIterator();
        totalVentas=0.00;
        totalGastos=0.00;
        totalEfect=0.00;
        Cajas cajj=new Cajas();
        tablaCaja.addColumn("COMPROBANTE");
        tablaCaja.addColumn("MOVIMIENTO");
        tablaCaja.addColumn("MONTO");
        Object[] fila=new Object[3];
        while(itC.hasNext()){
            cajj=(Cajas)itC.next();
            fila[0]=cajj.getNumeroDeComprobante();
            fila[1]=cajj.getDescripcionMovimiento();
            if(cajj.getTipoMovimiento()==1 || cajj.getTipoMovimiento()==7 || cajj.getTipoMovimiento()==13){
                totalVentas=totalVentas + cajj.getMontoMovimiento();
            }else{
                if(cajj.getTipoMovimiento()==9){

                }else{

                    //totalGastos=totalGastos + cajj.getMontoMovimiento();
                }
            }

            fila[2]=cajj.getMontoMovimiento();
            tablaCaja.addRow(fila);
        }
        ModificarLabels();
        jTable1.setModel(tablaCaja);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 75, Short.MAX_VALUE)
        );

        jLabel9.setText("Seleccionar Fecha:");

        jButton1.setText("Filtrar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(dateChooserCombo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 570, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(373, 373, 373)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel9)
                                    .addComponent(dateChooserCombo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(23, 23, 23)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        cargarLista();
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        DecimalFormat fr=new DecimalFormat("00");
        DecimalFormat formato=new DecimalFormat("####.##");
        //SiderconCapaatos.listaPedidos.clear();
        SimpleDateFormat dia=new SimpleDateFormat("dd/mm/yyyy");
        //Date mes=Calendar.getInstance().getTime();
        //dateChooserCombo1.setDateFormat(dia);
        Calendar fechaNueva=dateChooserCombo1.getSelectedDate();
        //Calendar fechaHasta=dateChooserCombo4.getSelectedDate();
        //mes=dia.format(fechaNueva,null,null);
        Double pesoDia=0.00;
        int ano=fechaNueva.get(Calendar.YEAR);
        int mes=fechaNueva.get(Calendar.MONTH);
        mes++;
        
        int dd=fechaNueva.get(Calendar.DAY_OF_MONTH);
        
        String ddia = null;
        String mmes = null;
        ddia=String.valueOf(dd);
        if(dd < 10)ddia="0"+dd;
        if(mes < 10){
            mmes="0"+mes;
        }else{
            mmes=String.valueOf(mes);
        }
        String fecha1=ano+"-"+mmes+"-"+ddia;
        Calendar fechaH=Numeros.SumarDias(Numeros.ConvertirStringEnDate(fecha1), 1);
        
        ano=fechaH.get(Calendar.YEAR);
        mes=fechaH.get(Calendar.MONTH);
        mes++;
        
        dd=fechaH.get(Calendar.DAY_OF_MONTH);
        
        ddia = null;
        mmes = null;
        ddia=String.valueOf(dd);
        if(dd < 10)ddia="0"+dd;
        if(mes < 10){
            mmes="0"+mes;
        }else{
            mmes=String.valueOf(mes);
        }
        String fecha3=ano+"-"+mmes+"-"+ddia;
       // ano=fechaHasta.get(Calendar.YEAR);
        //mes=fechaHasta.get(Calendar.MONTH);
        //mes++;
        //dd=fechaHasta.get(Calendar.DAY_OF_MONTH);
        String fecha2=ano+"-"+mes+"-"+dd;
        if(listadoC.size()> 0)listadoC.clear();
        Cajeables caj=new Cajas();
        listadoC=caj.ArquearHistoricos(fecha1,fecha3);
        
        AgregarRenglonTabla();
    }//GEN-LAST:event_jButton1ActionPerformed
    private void ModificarLabels(){
       
    }
    private void ListarProveedores(){
        Proveedores fact=new Proveedores();
        //listadoP=new ArrayList();
        //Adeudable ade=new FacturaProveedor();
        Personalizable ade=new Proveedores();
        //listadoP=ade.listar();
        
       
    }
    private void ListarClientes(){
      Clientes fact=new Clientes();
       
       
    }
    private void cargarLista(){
    DefaultListModel modelo = new DefaultListModel();
        //ArrayList lista=new ArrayList();
        Cajeables cajea = new Cajas();

        //lista=Cajas.getListadoCajas();
        int posic = this.jTable1.getSelectedRow();
        Cajas caaj = new Cajas();
        caaj = (Cajas) listadoC.get(posic);
        modelo = cajea.LeerComprobante(caaj.getNumeroDeComprobante(), caaj.getTipoDeComprobante(), caaj.getTipoMovimiento());
        String descripcionF = caaj.getDescripcionForma1();
        if (caaj.getIdForma1() == 0) {
            descripcionF = "CTA CTE";
        }
        ListadoComprobantes listadoDeArticulos = new ListadoComprobantes(caaj.getNumeroDeComprobante(), caaj.getTipoMovimiento(), caaj.getTipoDeComprobante(), descripcionF);
        listadoDeArticulos.jList1.setModel(modelo);
        listadoDeArticulos.setVisible(true);
        int posicion = listadoDeArticulos.jList1.getSelectedIndex();
    
    }
    private void OtrosMovimientos(){
        
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private datechooser.beans.DateChooserCombo dateChooserCombo1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
