/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package RestoPantallas;

import Conversores.Numeros;
import Impresiones.Impresora;
import Resto.Comandas;
import Resto.Mesas;
import Resto.Mozos;
import RestoDao.ComandasDao;
import RestoDao.MozosDao;
import RestoInterface.Restable;
import facturacion.clientes.ClientesTango;
import interfaceGraficas.Inicio;
import interfaces.Modificable;
import interfacesPrograma.Facturar;
import java.awt.event.KeyEvent;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.sql.Date;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import objetos.Articulos;
import objetos.Comprobantes;
import tablas.MiModeloTablaFacturacion;

/**
 *
 * @author Usuario
 */
public class AbmPedidos extends javax.swing.JInternalFrame {
    public ClientesTango cliT;
    private ArrayList detalleDelPedido=new ArrayList();
    private Articulos arti;
    private ArrayList listadoDeBusqueda=new ArrayList();
    private Double montoTotal=0.00;
    private Comprobantes comp=new Comprobantes();
    private Mesas mesa;
    private Mozos mozo;
    private TableColumn columnaDescripcion;
    private TableColumn columnaNumero;
    private TableColumn columnaCantidad;
    
    public AbmPedidos() {
        initComponents();
    }
    public AbmPedidos(Mesas messsa,int idMozo) {
        mesa=messsa;
        Restable resto=new MozosDao();
        mozo=(Mozos) resto.CargarPorId(idMozo);
        Facturar factu=new ClientesTango();
        cliT=(ClientesTango) factu.cargarPorCodigoAsignado(1);
        initComponents();
        this.setTitle("MESA: "+mesa.getDescripcion());
        this.jLabel4.setVisible(false);
        this.jTextField4.setVisible(false);
        this.jLabel1.setText("CONS FINAL");
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        MiModeloTablaFacturacion facturas=new MiModeloTablaFacturacion();
        jTable1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setIconifiable(true);
        setMinimumSize(new java.awt.Dimension(130, 40));
        setNormalBounds(new java.awt.Rectangle(0, 0, 130, 0));

        jLabel1.setText("jLabel1");

        jLabel2.setText("Código");

        jLabel3.setText("Cantidad");

        jButton1.setText("Imprimir Comanda");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setModel(facturas);
        jScrollPane1.setViewportView(jTable1);

        jButton2.setText("Eliminar Item");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTextField1.requestFocus();
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
        });

        jTextField2.setPreferredSize(new java.awt.Dimension(36, 22));
        jTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField2KeyPressed(evt);
            }
        });

        jLabel4.setText("Precio");

        jTextField4.setText("0.00");
        jTextField4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField4KeyPressed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 204));

        jLabel6.setForeground(new java.awt.Color(0, 0, 153));
        jLabel6.setText("TOTAL FACTURA :");

        jLabel7.setText("desc. Articulo");

        jLabel8.setText("<html><strong>F4 - PARA CERRAR MESA<br>\nF1- PARA BUSCAR ARTÍCULOS</strong></html>");

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/icono.png"))); // NOI18N
        jButton7.setText("Agregar Comentario");
        jButton7.setPreferredSize(new java.awt.Dimension(129, 41));
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton3.setText("Re imprimir Comanda Completa");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(jTextField1)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 39, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 350, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel8)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jButton1)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jButton2)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addContainerGap(272, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addContainerGap(323, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try{
            int posicion=this.jTable1.getSelectedRow();
            detalleDelPedido.remove(posicion);
            //detalleDelPedido.clear();
        }catch(java.lang.ArrayIndexOutOfBoundsException ee){
            System.err.println("error de indice "+ee);
        }
        agregarRenglonTabla();
        jTextField1.setText("");
        jTextField1.requestFocus();
        //listadoDeBusqueda.clear();
        //montoTotal=0.00;

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            //System.out.println("ENTRO CON EL ENTER¡¡¡¡¡¡");
            listadoDeBusqueda.clear();
            Facturar fart=new Articulos();
            arti=new Articulos();
           
                //cliT=new ClientesTango("999999");
            
            
                arti=(Articulos)fart.cargarPorCodigoDeBarra(jTextField1.getText());
            
            if(arti.getCodigoDeBarra().equals("")){

                jTextField1.setText("");
            }else{
                listadoDeBusqueda.add(arti);
                jTextField1.setText(arti.getCodigoAsignado());
                jTextField2.setText("1");
                this.jLabel7.setText(arti.getDescripcionArticulo());
                if(arti.getModificaPrecio()){
                    this.jLabel4.setVisible(true);
                    this.jTextField4.setVisible(true);
                    this.jTextField4.setText(Numeros.ConvertirNumero(arti.getPrecioUnitarioNeto()));
                    //this.jTextField4.setEnabled(true);
                    // this.jCheckBox1.setVisible(false);

                }else{

                    this.jLabel4.setVisible(false);
                    this.jTextField4.setVisible(false);

                    if(arti.getPrecioServicio() > 0){
                        this.jLabel4.setVisible(true);
                        this.jTextField4.setVisible(true);

                        this.jTextField4.setText(Numeros.ConvertirNumero(arti.getPrecioServicio()));
                        //this.jTextField4.setEnabled(false);
                        //this.jCheckBox1.setVisible(true);
                        Calendar calendario=new GregorianCalendar();
                        int hora=calendario.get(Calendar.HOUR_OF_DAY);
                        //System.out.println("LA HORA ACTUAL ES :"+hora);
                        
                    }
                }

                //if(cliT.getCondicionDeVenta()==2)this.jCheckBox2.setEnabled(true);
                this.jTextField2.selectAll();
                this.jTextField2.requestFocus();
            }
        }
        if(evt.getKeyCode()==KeyEvent.VK_F1){
            //System.out.println("ENTRO CON F1¡¡¡¡¡");
            Facturar fart=new Articulos();
            
                listadoDeBusqueda=fart.listadoBusqueda(this.jTextField1.getText());
            
            cargarLista(listadoDeBusqueda);
        }
        if(evt.getKeyCode()==KeyEvent.VK_F4){
            //verificar();
            //Impresora imp=new Impresora();
            try{
                String cadena=cliT.getCodigoCliente()+" - "+cliT.getRazonSocial()+"\n"+cliT.getDireccion();
                //comp.setCliente(cliT);
                //VisorDeHojaDeRuta

                //comp.setVendedor(VisorDeHojaDeRuta.tG.getOperador());
                

                //comp.setArticulos(detalleDelPedido);
                DecimalFormat fr=new DecimalFormat("00");
                Calendar c1=Calendar.getInstance();
                Calendar c2=new GregorianCalendar();
                String dia=Integer.toString(c2.get(Calendar.DAY_OF_MONTH));
                String mes=Integer.toString(c2.get(Calendar.MONTH));
                String ano=Integer.toString(c2.get(Calendar.YEAR));

                int da=Integer.parseInt(dia);
                int me=Integer.parseInt(mes);
                me++;
                dia=fr.format(da);
                mes=fr.format(me);
                String fecha=dia+"/"+mes+"/"+ano;
                String fecha2=ano+"-"+mes+"-"+dia;
                //comp.setFechaComprobante(fecha2);
                //comp.setFechaComprobante(fecha);
                int comprobanteTipo=(int) Inicio.sucursal.getTipoComprobantes().get(0);
                //System.out.println("COMPROBANTEEEEEEE "+comprobanteTipo);
                if(cliT.getCondicionIva().equals("RI "))comprobanteTipo=(int)Inicio.sucursal.getTipoComprobantes().get(1);
                Comprobantes comprobante=new Comprobantes();
                comprobante.setCliente(cliT);
                comprobante.setTipoMovimiento(1);
                comprobante.setTipoComprobante(comprobanteTipo);
                comprobante.setFechaEmision((Date.valueOf(fecha2)));
                comprobante.setListadoDeArticulos(detalleDelPedido);
                comprobante.setUsuarioGenerador(Inicio.usuario.getNumero());
                comprobante.setIdSucursal(Inicio.sucursal.getNumero());
                comprobante.setIdDeposito(1);
                comprobante.setIdMozo(mozo.getId());
                comprobante.setIdMesa(mesa.getId());
                comprobante.setIdCaja(Inicio.caja.getNumero());
                if(montoTotal == 0.00){
                    String sqM="usuario :"+Inicio.usuario.getNombre()+" sucursal "+Inicio.sucursal.getNumero()+" idcaja "+Inicio.caja.getNumero();
                    JOptionPane.showMessageDialog(this,"OJO EL MONTO DE ESTE COMPROBANTE ES $ 0, AVISE PARA DETECTAR EL ERROR");
                    FileWriter fichero=null;
                    PrintWriter pw=null;
                    try {
                        fichero = new FileWriter("C:\\Gestion\\"+Inicio.fechaDia+" - errores en comprobantes.txt",true);
                            pw=new PrintWriter(fichero);
                            pw.println(sqM);
                        } catch (IOException ex1) {
                            Logger.getLogger(AbmPedidos.class.getName()).log(Level.SEVERE, null, ex1);
                        }finally{
                            try {
                                // Nuevamente aprovechamos el finally para
                                // asegurarnos que se cierra el fichero.
                                if (null != fichero)
                                fichero.close();
                            } catch (Exception e2) {
                                e2.printStackTrace();
                            }
                        }
                    }
                    comprobante.setMontoTotal(montoTotal);
                    int noFacturar=0;
                    
                        comprobante.setPagado(1);
                   
                    if(noFacturar==0){
                        Facturar fat=new Comprobantes();
                        fat.guardar(comprobante);
                        /*
                        * ACA DEVO LIMPIAR TODOS LOS CAMPOS Y VARIABLES DE LA PANTALLA
                        *
                        */
                        //comp.setTipoComprobante(comprobanteTipo);
                        //comp.setMontoTotal(montoTotal);

                    }else{
                        JOptionPane.showMessageDialog(this,"El cliente supera el límite de crédito, debe abonar la venta");
                        noFacturar=0;
                    }
                }
                finally{
                    detalleDelPedido.clear();
                    agregarRenglonTabla();
                    
                    this.jTable1.removeAll();
                    listadoDeBusqueda.clear();
                    //cargarLista(listadoDeBusqueda);
                    //cliT=new ClientesTango("999999");
                    //this.jLabel6.setText(cliT.getRazonSocial());
                    //this.jRadioButton2.setSelected(true);
                    this.jTextField2.setText("");
                    jTextField1.setText("");
                    jTextField1.requestFocus();
                }
            }
    }//GEN-LAST:event_jTextField1KeyPressed

    private void jTextField2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            Double cantt=Double.parseDouble(this.jTextField2.getText());
            if(cantt < 10000){
                if(arti.getModificaPrecio()){
                    
                    this.jTextField4.selectAll();
                    this.jTextField4.requestFocus();
                }else{
                    if(arti.getPrecioServicio()>0){
                        this.jTextField4.requestFocus();
                    }else{
                        Articulos articul=new Articulos();
                        articul.setCantidad(cantt);
                        articul.setCodigoAsignado(arti.getCodigoAsignado());

                        articul.setCodigoDeBarra(arti.getCodigoDeBarra());
                        articul.setDescripcionArticulo(arti.getDescripcionArticulo());
                        articul.setNumeroId(arti.getNumeroId());
                        articul.setPrecioDeCosto(arti.getPrecioDeCosto());
                        articul.setPrecioUnitario(arti.getPrecioUnitarioNeto());
                        articul.setPrecioUnitarioNeto(arti.getPrecioUnitarioNeto());
                        articul.setIdCombo(arti.getIdCombo());
                        articul.setCombo(arti.getCombo());
                        detalleDelPedido.add(articul);
                        agregarRenglonTabla();
                        //                Double montoTotalX=(arti.getPrecioUnitario() * arti.getCantidad());
                        //                montoTotal=montoTotal + montoTotalX;
                        montrarMonto();
                        //System.err.println("MONTO TOTAL "+montoTotal);
                        //this.jLabel7.setText("");
                        this.jTable1.removeAll();
                        this.jButton1.setVisible(true);
                        this.jTextField1.setText("");
                        this.jTextField2.setText("");
                        this.jTextField1.requestFocus();
                    }
                }
            }else{
                JOptionPane.showMessageDialog(this,"LA CANTIDAD INGRESADA ES EXCESIVA, POR FAVOR VERIFÍQUELA");
            }
        }
    }//GEN-LAST:event_jTextField2KeyPressed

    private void jTextField4KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField4KeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            Double servicio=0.00;
            //Articulos articuloss=new Articulos();
            /*
            if(this.jCheckBox1.isSelected()){
                servicio=arti.getPrecioServicio();
            }else{
                servicio=0.00;
            }
            */
            if(arti.getModificaPrecio())servicio=Numeros.ConvertirStringADouble(String.valueOf(this.jTextField4.getText()));
            Double tota=servicio;
            //arti.setPrecioUnitarioNeto(tota);
            //arti.setPrecioServicio(servicio);
            Double cantt=Double.parseDouble(this.jTextField2.getText());
            Articulos articul=new Articulos();
            articul.setCantidad(cantt);
            articul.setCodigoAsignado(arti.getCodigoAsignado());
            articul.setPrecioServicio(servicio);
            articul.setCodigoDeBarra(arti.getCodigoDeBarra());
            articul.setDescripcionArticulo(arti.getDescripcionArticulo());
            articul.setNumeroId(arti.getNumeroId());
            articul.setPrecioDeCosto(arti.getPrecioDeCosto());
            articul.setPrecioUnitario(arti.getPrecioUnitarioNeto());
            articul.setPrecioUnitarioNeto(tota);
            articul.setModificaPrecio(arti.getModificaPrecio());
            articul.setIdCombo(arti.getIdCombo());
            articul.setCombo(arti.getCombo());
            detalleDelPedido.add(articul);
            agregarRenglonTabla();
            //                Double montoTotalX=(arti.getPrecioUnitario() * arti.getCantidad());
            //                montoTotal=montoTotal + montoTotalX;
            montrarMonto();
            //System.err.println("MONTO TOTAL "+montoTotal);
            //this.jLabel7.setText("");
            this.jTable1.removeAll();
            //this.jButton1.setVisible(true);
            this.jTextField1.setText("");
            this.jTextField2.setText("");
            this.jTextField1.requestFocus();
            this.jLabel4.setVisible(false);
            this.jTextField4.setVisible(false);
        }
    }//GEN-LAST:event_jTextField4KeyPressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Impresora impre=new Impresora();
        Comandas comanda = null;
        ArrayList listaCom=new ArrayList();
        if(mesa.getIdComanda() == null){
            ComandasDao cd=new ComandasDao();
            comanda=new Comandas();
            comanda=cd.GenerarNueva(mesa.getId(),mesa.getIdMozo());
            mesa.setIdComanda(comanda.getId());
        }
        Iterator itDP=detalleDelPedido.listIterator();
        Articulos articuloP;
        while(itDP.hasNext()){
            articuloP=(Articulos) itDP.next();
            if(articuloP.getIdComanda() > 0){
                
            }else{
                articuloP.setIdComanda(mesa.getIdComanda());
                listaCom.add(articuloP);
            }
        }
        impre.ImprimirComanda(mesa, listaCom);
        this.jTextField1.requestFocus();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        int cod=0;
        String descripcion=JOptionPane.showInputDialog("Ingrese aclaracion del articulo ","");
        Articulos pedidos=new Articulos();
        pedidos.setNumeroId(0);
        pedidos.setCantidad(0.00);
        pedidos.setPrecioUnitarioNeto(0.00);
        pedidos.setPrecioDeCosto(0.00);
        pedidos.setDescripcionArticulo(descripcion);
        pedidos.setCodigoAsignado(String.valueOf(cod));
        pedidos.setIdCombo(0);
        detalleDelPedido.add(pedidos);
        agregarRenglonTabla();
        montrarMonto();
        //jTextField1.setText("");
        jTextField1.requestFocus();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        Impresora impre=new Impresora();
        Comandas comanda = null;
        ArrayList listaCom=new ArrayList();
        if(mesa.getIdComanda() == 0){
            ComandasDao cd=new ComandasDao();
            comanda=new Comandas();
            comanda=cd.GenerarNueva(mesa.getId(),mesa.getIdMozo());
            mesa.setIdComanda(comanda.getId());
        }
        
        impre.ImprimirComanda(mesa, detalleDelPedido);
        this.jTextField1.requestFocus();
    }//GEN-LAST:event_jButton3ActionPerformed

    
    private void cargarLista(ArrayList lista){
    DefaultTableModel modelo=new DefaultTableModel();
    Modificable mod=new Articulos();
    modelo=mod.mostrarListadoBusqueda(lista);
    BusquedaDeArticulos busque=new BusquedaDeArticulos(null,true,lista);
    
    busque.jTable1.setModel(modelo);

    /*
    columnaNumero=this.jTable2.getColumn("Codigo");
        columnaNumero.setPreferredWidth(50);
        columnaNumero.setMaxWidth(50);
        columnaDescripcion=this.jTable2.getColumn("Descripcion");
        columnaDescripcion.setPreferredWidth(100);
        columnaPrecio=this.jTable2.getColumn("Precio");
        columnaPrecio.setPreferredWidth(60);
        columnaPrecio.setMaxWidth(60);
      */  
    //this.jList1.setModel(modelo);
    busque.setVisible(true);
    busque.jTable1.requestFocus();
    Articulos articulo=busque.articulo;
        //articulo=(Articulos)listadoDeBusqueda.get(posicion);
        this.jTextField1.setText(articulo.getCodigoDeBarra());
        this.jTextField1.selectAll();
        this.jTextField1.requestFocus();
    
    
    
}
private void agregarRenglonTabla(){
        MiModeloTablaFacturacion busC=new MiModeloTablaFacturacion();
        this.jTable1.removeAll();
        montoTotal=0.00;
        //ArrayList listadoPedidos=new ArrayList();
        this.jTable1.setModel(busC);
        Articulos pedidos;
        busC.addColumn("CODIGO");
        busC.addColumn("DESCRIPCION");
        busC.addColumn("CANT.");
        busC.addColumn("PRECIO UNITARIO");
        Object[] fila=new Object[4];
        Iterator irP=detalleDelPedido.listIterator();
        while(irP.hasNext()){
            pedidos=new Articulos();
            pedidos=(Articulos) irP.next();
            //fila[0]=pedidos.getCodigo();
            String codig=pedidos.getCodigoAsignado();
            String desc=pedidos.getDescripcionArticulo();
            String cant=String.valueOf(pedidos.getCantidad());
            
            fila[0]=codig;
            fila[1]=desc;
            fila[2]=cant;
            Double precioUnitario=pedidos.getPrecioUnitarioNeto();
            Double valor=precioUnitario * pedidos.getCantidad();
            //precioUnitario= pedidos.getPrecioUnitario() * cliT.getCoeficienteListaDeprecios();
            //Double valor=(pedidos.getCantidad() * precioUnitario);
            //valor=valor * cliT.getCoeficienteListaDeprecios();
            pedidos.setPrecioUnitario(valor);
            String val=Numeros.ConvetirNumeroDosDigitos(valor);
            montoTotal=montoTotal + valor;
            fila[3]=val;
            busC.addRow(fila);
        }
        String total=String.valueOf(montoTotal);
        columnaNumero=this.jTable1.getColumn("CODIGO");
        columnaNumero.setPreferredWidth(50);
        columnaNumero.setMaxWidth(50);
            columnaDescripcion=this.jTable1.getColumn("DESCRIPCION");
        columnaDescripcion.setPreferredWidth(130);
        //columnaDescripcion.setMaxWidth(100);
        columnaCantidad=this.jTable1.getColumn("CANT.");
        columnaCantidad.setPreferredWidth(50);
        columnaCantidad.setMaxWidth(50);
        this.jLabel5.setText(total);
        listadoDeBusqueda.clear();
        //cargarLista(listadoDeBusqueda);
        
        this.jTextField4.setText("0.00");
        if(detalleDelPedido.size()==0){
            this.jButton1.setEnabled(false);
        }else{
            this.jButton1.setEnabled(true);
        }
}
private void montrarMonto(){
    //System.err.println("DESCUENTO :"+cliT.getDescuento());
    Double total=montoTotal;
    //Double total=montoTotal * cliT.getDescuento();
    //comp.setMontoTotal(total);
    this.jLabel5.setText(Numeros.ConvetirNumeroDosDigitos(total));
}
private void verificar(){
    int cantidad=this.jTable1.getRowCount();
    Articulos art=new Articulos();
    cantidad=cantidad - 1;
    for(int ah=0;ah < cantidad;ah++){
        
        art=(Articulos)detalleDelPedido.get(ah);
        //ah++;
        String descripcion=(String) this.jTable1.getValueAt(ah,1);
        art.setDescripcionArticulo(descripcion);
        String cant=String.valueOf(this.jTable1.getValueAt(ah, 2));
        Double cantida=Double.valueOf(cant).doubleValue();
        art.setCantidad(cantida);
        Double precioUni=(Double) this.jTable1.getValueAt(ah,3);
        Double tot=precioUni;
        art.setPrecioUnitario(tot);
        //montoTotal=montoTotal + tot;
        //System.err.println("nimero "+ah+" decripcion "+descripcion+" limite "+cantidad);
    }
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField4;
    // End of variables declaration//GEN-END:variables
}
